
~ welcome_C
if Game.currentHealth +10 > 60:
	{{charaName[PlayerSelect]}}: I'm too stressed to take the class now, I should go to the cafeteria to 
		eat something or go to the medical room to relieve stress.
	=> END
Quang: [[Hi|Hello|Howdy]], Welcome to C++! C++ is one of the most popular programming languages.
		It is used to build games, operating systems, browsers, and much more!
		The biggest advantage of C++ is its scalability and control over how it uses resources.
Quang: In this course you will learn how to create real programs in C++, perform various operations, and much more!
Quang: Do you want to start now?
- Gettting started and Statements
	set CPlusLesson = 0
	set Game.currentHealth += 10
	do get_tree().change_scene_to_file("res://Scence/study_C.tscn")
	=> END
- Program Structure and Variables.
	set CPlusLesson = 8
	set Game.currentHealth += 10
	do get_tree().change_scene_to_file("res://Scence/study_C.tscn")
	=> END
- Data Types and Doing Math.
	set CPlusLesson = 23
	set Game.currentHealth += 10
	do get_tree().change_scene_to_file("res://Scence/study_C.tscn")
	=> END
- More variable and Comment.
	set CPlusLesson = 36
	set Game.currentHealth += 10
	do get_tree().change_scene_to_file("res://Scence/study_C.tscn")
	=> END
- No
	=> END

~ study_C
if CPlusLesson == 0
	Quang: Humans use computer programs to communicate with machines. Without computer
			programs, we wouldn't have smartphones, websites, or even exploration in outer space.
			giving you a competitive edge in this technology-driven world. 
	Quang: So What's a programming language?
	- A language used by machines to communicate with aliens.
			{{charaName[PlayerSelect]}}: A language used by machines to communicate with aliens. 
			set Game.currentHealth += 5
			Quang: ‚ùåSorry,this is the wrong answer‚ùå
	- A language used by humans to communicate with machines.
			{{charaName[PlayerSelect]}}: A language used by humans to communicate with machines.
			Quang: üéâCongratulations, this is the right answerüéâ
	Quang: Most computer programs are designed to produce outputs. Here are some examples:
		You've got a new message" notifications
		"Game Over" displayed on the screen when playing video games
		Your account balance when checking your online banking app.
	set CPlusLesson = 1
	Quang:  The simplest output consists of displaying a message on the screen.
	Quang: Coders use outputs all the time to check that the computer is following the given
			instructions and fix problems with code. 
	Quang: The following line of code displays "Welcome to C++" on the screen as an output.
	set CPlusLesson = 2
	Quang: Congratulation, you have taken your first steps in learning C++
	Quang: In the next lesson, you will create code with different types of data.
	set CPlusLesson = 3
	Quang: Firstly is about Statement.
	Quang: A line of code is called a statement. A statement performs a specific task.
		The output command is an example of a statement
	set CPlusLesson = 4
	Quang: Semicolons
	Quang: Each statement in C++ needs to end with a semicolon ;.
		The code below contains an error. Fix it by adding a semicolon ; at the end of the statement, 
		then run the code.
	Quang: !! Errors in code are also known as bugs. Debugging is the process of 
		finding and fixing bugs in code.
	Quang: It time for question, let me ask you some thing.
		Each statement in C++ needs to end with a
	- Angle bracket >
		{{charaName[PlayerSelect]}}: Angle bracket >
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- Semicolon ;
		{{charaName[PlayerSelect]}}: Semicolon ;
		Quang: üéâCongratulations, this is the right answerüéâ
	set CPlusLesson = 5
	Quang: Outputting a Text
	Quang: When printing text outputs, you need to enclose the text in double quotes.
	Quang: !! Your code will result in an error if you forget the quotes around the text.
		!! C++ is a case-sensitive language. This means that you need to pay attention to 
		the correct input of uppercase and lowercase letters.
	set CPlusLesson = 6
	Quang: Text vs Numbers
	Quang: Computers treat text and numbers differently. You don't need quotes when outputting numbers.
	set CPlusLesson = 7
	Quang: In the next lesson, you will learn about the structure of programs in C++ 
		and will work with more complex programs.
	Quang: This is the end of your lesson, go grab some food and have a nice rest.
	do get_tree().change_scene_to_file("res://Scence/done_study_c.tscn")
if CPlusLesson == 8
	Quang: Let's look at the code of the whole program and learn about all the code statements and what they do.
		Here is the code to output text:
	set CPlusLesson = 9
	Quang: The first line of the code adds the <iostream> header to the program
		A header is a file that contains functions and commands. 
	Quang: The <iostream> header in C++ contains the cout command, that we used for outputting
		text. This is why we need to include it in our program, to enable us to use the cout command.
	Quang: !! The #include command is used to add a header file to the program. Note the # symbol, 
		it's necessary!
	Quang: The next statement of the code is:
	set CPlusLesson = 10
	Quang: This tells the program to use the std namespace. We need to do this as the 
		cout command is part of the std namespace.
	Quang: !! A namespace is used to organize code into logical groups and give them names. So, 
		the std namespace is part of the <iostream> header, containing the cout command.
	set CPlusLesson = 11
	Quang: Let's take a look at our whole program:
	Quang: Each C++ program has a entry point, or starting point, which is a function called main.
	Quang: !! We will cover each keyword of the definition in later lessons, when learning about
		functions. For now, remember that the main function needs to be declared identical to
		the code above.
	Quang: It time for question, let me ask you some thing.
		Which of the following is the entry point of every C++ program?
	- The first line of code
		{{charaName[PlayerSelect]}}: The first line of code
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- The main function
		{{charaName[PlayerSelect]}}: The main function
		Quang: üéâCongratulations, this is the right answerüéâ
	set CPlusLesson = 12
	Quang: Curly brackets { } indicate the beginning and end of a function, which can also be called
		the function's body. The code inside the brackets indicates what the function does when executed.
	Quang: When we run the code, the cout command will be executed.
	Quang: The main function can contain multiple lines of code.
	Quang: For example, let's try to output two different text values:
	set CPlusLesson = 13
	Quang: !! When you run this code, you'll notice that the output is on the same line. This is 
		happening because the cout command does not add a new line at the end of the output.
	Quang: To add a new line, you can use the endl command, like this:
	set CPlusLesson = 14
	Quang: This adds a new line after the first text. You can use as many endl commands as you need.
	Quang: !! Note, that you can use the << symbols to separate different outputs in a single cout 
		statement. For example cout << "One" << endl << "Two" << endl;
	set CPlusLesson = 15
	Quang: In the next lesson, you will learn about the variable in C++ 
		and will work with more complex programs.
	set CPlusLesson = 16
	Quang: Every program works with values.
		A variable lets you store a value by assigning it to a name. The name can be used to
		refer to the value later in the program. 
	Quang: !! For example, in game development, you would use a variable to store how many 
		points the player has scored.
	Quang: !! For example, in game development, you would use a variable to store how many 
		points the player has scored.
	Quang: Every variable has a type, which defines the type of the value it holds. 
		A variable can hold a text value, a number, a decimal, etc.
		We are already familiar with text values - they are created use quotes:
	Quang: !! A text value is called a String.
		Let's create a variable of type string:
	set CPlusLesson = 17
	Quang: This creates a variable called message of type string. Now, our variable message can 
		hold string values.
	Quang: !! In programming terms, the process of creating a variable is called declaration.
		After declaring our variable, we can assign it a value use the assignment = operator:
	set CPlusLesson = 18
	Quang: Now, message holds the value "Welcome". 
		!! Note, that the string value should be in quotes.
	set CPlusLesson = 19
	Quang: Now, after declaring and assigning a value, we can output the value of our variable
	Quang: We can combine the declaration and assignment into one statement, like this:
	set CPlusLesson = 20
	Quang: !! This is handy when we already know the value for our variable and makes the code 
		shorter and more readable.
	Quang: A variable can change its value during the program multiple times. 
		For example, the message can change based on the language:
	set CPlusLesson = 21
	Quang: In this example we change the Welcome to Bienvenue
	set CPlusLesson = -1
	Quang: It time for question, let me ask you some thing.
		 What is the output of this code?
	- ab
		{{charaName[PlayerSelect]}}: ab
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- abc
		{{charaName[PlayerSelect]}}: abc
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- cb
		{{charaName[PlayerSelect]}}: cb
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- bc
		{{charaName[PlayerSelect]}}: bc
		Quang: üéâCongratulations, this is the right answerüéâ
	set CPlusLesson = 22
	Quang: This is the end of your lesson, go grab some food and have a nice rest.
	do get_tree().change_scene_to_file("res://Scence/done_study_c.tscn")
if CPlusLesson == 23
	Quang: C++ supports many different types for your variables, based on their value.
		The int type is used to store whole numbers (called integers in programming):
	set CPlusLesson = 24
	Quang: Decimals
		To store decimals (or floating point numbers), C++ provides the float and double data 
		types. For example
	Quang: !! The term "floating point" refers to the fact that a varying number of digits can appear
		before and after the decimal point. You could say that the decimal has the ability to " float".
	Quang: The float type is also used to store decimals. To specify that the value is a float, 
		we need to use the letter f after it:
	set CPlusLesson = 25
	Quang: This tells C++ to use the value as a float, instead of double.
		!! What's the difference between float and double? Tap Continue to learn more!
	Quang: float vs double
		By default, decimal values are of type double.
		float uses less storage in the memory, but is not as precise as the double type.
	Quang: This means that calculations that use floats are faster than the ones that use double,
		 however, the results are less accurate in terms of the decimal digits.
		!! The best practice is to use double, if you do not have any specific requirements to use float.
	set CPlusLesson = 26
	Quang: The char type is used to store a single character.
		It is similar to declaring a string, but uses single quotes for the value:
	set CPlusLesson = 27
	Quang: The bool type can only hold values: either true or false. It is used when working with onditions.
		The online variable can show if the user is online or not.
	Quang: !!When you run the code, you'll notice that the output is 0, instead of false. This is 
		because the boolean value true corresponds to 1, while the value false corresponds to 0
	set CPlusLesson = 28
	Quang: We will learn how to use variables and make calculations in the next lesson.
	set CPlusLesson = 29
	Quang: C++ supports a number of arithmetic operators that can be used to perform calculations.
		Let's declare two variables and output their sum:
	set CPlusLesson = -2
	Quang: It time for question, let me ask you some thing.
		 What is the output of this code?
	- 8
		{{charaName[PlayerSelect]}}: 8
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- 7
		{{charaName[PlayerSelect]}}: 7
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- 9
		{{charaName[PlayerSelect]}}: 9
		Quang: üéâCongratulations, this is the right answerüéâ
	- 6
		{{charaName[PlayerSelect]}}: 6
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	set CPlusLesson = 30
	Quang: The result of a calculation can be assigned to another variable.
		For example, let's use subtraction to demonstrate
	set CPlusLesson = 31
	Quang: Multiplication
		Multiplication is done use the * operator. For example
	Quang:  This is example how to multiply between number.
	set CPlusLesson = 32
	Quang: Division
		Division is done use the / operator. Let's calculate how many days there are in 500 hours:
		!! The result will be a whole number, as we are dividing two integers.
	set CPlusLesson = -3
	Quang: It time for question, let me ask you some thing.
		 What is the output of this code?
	- 3
		{{charaName[PlayerSelect]}}: 3
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- 1
		{{charaName[PlayerSelect]}}: 1
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- 2
		{{charaName[PlayerSelect]}}: 2
		Quang: üéâCongratulations, this is the right answerüéâ
	set CPlusLesson = 33
	Quang: In case we need a more precise result, which includes decimal points, we can use doubles:
	set CPlusLesson = 34
	Quang: Remainder
		The % remainder operator (also called the modulo) is used to find the remainder of a
		division. Let's find how many days will be left over if we divide 500 days into weeks:
	set CPlusLesson = -4
	Quang: It time for question, let me ask you some thing.
		 What is the output of this code?
	- 0
		{{charaName[PlayerSelect]}}: 0
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- 1
		{{charaName[PlayerSelect]}}: 1
		Quang: üéâCongratulations, this is the right answerüéâ
	- 2
		{{charaName[PlayerSelect]}}: 2
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	set CPlusLesson = 35
	Quang: We'll learn more about variables in the next lesson!
	Quang: This is the end of your lesson, go grab some food and have a nice rest.
	do get_tree().change_scene_to_file("res://Scence/done_study_c.tscn")
if CPlusLesson == 36
	Quang: You can declare variables of the same type on one line, separated by commas.
		This makes the code shorter and also easier to read.
	Quang: It time for question, let me ask you some thing.
		 When separating multiple variable declarations with a comma, they need to:
	- be integers
		{{charaName[PlayerSelect]}}: be integers
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- have the same type
		{{charaName[PlayerSelect]}}: have the same type
		Quang: üéâCongratulations, this is the right answerüéâ
	- be named x and y
		{{charaName[PlayerSelect]}}: be named x and y
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- have the same value
		{{charaName[PlayerSelect]}}: have the same value
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	set CPlusLesson = 37
	Quang: Auto
		Another handy keyword is auto. The auto keyword allows you to set the type of the
		variable based on its value. For example:
	Quang: !! When use the auto keyword, the variable must be assigned a value during
		declaration, else you will get an error.
	set CPlusLesson = 38
	Quang: Here is some of example how to name the variable.
	set CPlusLesson = 39
	Quang: There are two popular naming conventions: 
	Quang: Pascal case: The first letter in the identifier and the first letter of each subsequent
		concatenated word are capitalized. For example, BackColor
	Quang: Camel case: The first letter of an identifier is lowercase and the first letter of 
		each subsequent concatenated word is capitalized. For example, backColor
	Quang: It time for question, let me ask you some thing.
		 Which of the following are legal variable names in C++? Select all correct answers.
	- name3_var
		{{charaName[PlayerSelect]}}: name3_var
		Quang: üéâCongratulations, this is the right answerüéâ
	- 14var
		{{charaName[PlayerSelect]}}: 14var
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- salary
		{{charaName[PlayerSelect]}}: salary
		Quang: üéâCongratulations, this is the right answerüéâ
	- &*^var
		{{charaName[PlayerSelect]}}: &*^var
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	set CPlusLesson = 40
	Quang: You are almost done with the Module! Great job!
	set CPlusLesson = 41
	Quang: Next is Comment.
		One more thing before we complete the first module.
		Comments are annotations in the code that explain what the code is doing.
		Code is for computers, while comments are for humans who read and work with the code
	Quang: A single-line comment starts with two forward slashes and continues until 
		it reaches the end of the line.
	Quang: !! Adding comments as you write code is a good practice, because they provide 
		clarification and understanding when you need to refer back to it, as well as for 
		others who might need to read it.
	set CPlusLesson = 42
	Quang: You can also comment out lines of code, in case they are work-in-progress 
		or you don't want to delete them yet
	Quang: !! The commented lines of code will get ignored when you run the program.
	set CPlusLesson = 43
	Quang: Multi-Line Comments
		If you need to comment out multiple lines, or write a multi-line comment, 
		you can use the /* */ symbols, like this
	Quang: Anything between the /* and */ symbols becomes a comment.
		!! You can also use multi-line comments to comment out multiple lines of code.
	Quang: It time for question, let me ask you some thing.
		 Which of the following is a valid comment?
	- # some comment #
		{{charaName[PlayerSelect]}}: # some comment #
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- ** some comment **
		{{charaName[PlayerSelect]}}: ** some comment **
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- */ some comment /*
		{{charaName[PlayerSelect]}}: */ some comment /*
		set Game.currentHealth += 5
		Quang: ‚ùåSorry,this is a wrong answer‚ùå
	- /* some comment */
		{{charaName[PlayerSelect]}}: /* some comment */
		Quang: üéâCongratulations, this is the right answerüéâ
	set CPlusLesson = 44
	Quang: This is the end of your lesson, go grab some food and have a nice rest.
	do get_tree().change_scene_to_file("res://Scence/done_study_c.tscn")
=> END
